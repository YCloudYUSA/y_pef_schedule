<?php

/**
 * @file
 * Contains installation and update implementations for the y_pef_schedule.
 */

use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_install().
 */
function y_pef_schedule_install(): void {
  // Create custom fields required by the module.
  _y_pef_schedule_create_fields();
}

/**
 * Implements hook_install().
 */
function y_pef_schedule_uninstall(): void {
  // Remove custom fields created by the module.
  _y_pef_schedule_remove_fields();
}

/**
 * Creates required fields for the module.
 *
 * This function defines and saves the 'field_session_color' field storage and
 * field config for nodes of type 'session', which is used to store color
 * information for sessions.
 *
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function _y_pef_schedule_create_fields(): void {
  // Define and save field storage for 'Session color'.
  FieldStorageConfig::create([
    'field_name' => 'field_session_color',
    'entity_type' => 'node',
    'type' => 'string',
    'settings' => [
      'max_length' => 255,
    ],
    'cardinality' => 1,
  ])->save();

  // Define and save field configuration for 'Session color'.
  FieldConfig::create([
    'field_name' => 'field_session_color',
    'entity_type' => 'node',
    'bundle' => 'session',
    'label' => 'Session color',
    'description' => 'Specifies the hex color for the event.',
  ])->save();

  // Update display settings for the 'Session color' field.
  _y_pef_schedule_update_displays_on_install();
}

/**
 * Updates display settings for 'Session' content type upon module installation.
 *
 * Specifically, updates the form display settings for the 'Session color' field
 * to ensure it is properly displayed in the session node form.
 *
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function _y_pef_schedule_update_displays_on_install(): void {
  /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entity_display_repository */
  $entity_display_repository = \Drupal::service('entity_display.repository');

  // Retrieve and update the form display for 'session' nodes.
  $form_display = $entity_display_repository->getFormDisplay('node', 'session');
  $form_display->setComponent('field_session_color', [
    'type' => 'string_textfield',
    'settings' => [
      'display_label' => TRUE,
    ],
    'weight' => 20,
  ])->save();
}

/**
 * Removes fields created by the module.
 *
 * Deletes both the field config and field storage for 'field_session_color',
 * cleaning up any data and configurations associated with this field.
 *
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function _y_pef_schedule_remove_fields(): void {
  $field_name = 'field_session_color';

  // Delete field configuration.
  $field_config = FieldConfig::loadByName('node', 'session', $field_name);
  $field_config?->delete();

  // Delete field storage.
  $field_storage = FieldStorageConfig::loadByName('node', $field_name);
  $field_storage?->delete();
}

/**
 * Implements hook_update_N().
 */
function y_pef_schedule_update_9001(&$sandbox): void {
  _y_pef_schedule_create_fields();
}
